generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
model User {
  id         String   @id @db.Uuid
  email      String   @unique
  username   String?  @unique
  name       String?
  profilePicture String?
  isAdmin    Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relations
  todos      Todo[]
  events     Event[]
  notes      Note[]
  shortLinks ShortLink[]
}

model Todo {
  id          String   @id @default(uuid()) @db.Uuid
  title       String
  description String?
  completed   Boolean  @default(false)
  priority    String   @default("medium") // low, medium, high
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String   @db.Uuid
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

model Event {
  id          String   @id @default(uuid()) @db.Uuid
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  allDay      Boolean  @default(false)
  color       String   @default("#40E0D0")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String   @db.Uuid
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

model Note {
  id          String   @id @default(uuid()) @db.Uuid
  title       String
  content     String
  tags        String[] @default([])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String   @db.Uuid
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

model ShortLink {
  id          String   @id @default(uuid()) @db.Uuid
  originalUrl String
  shortCode   String   @unique
  title       String?
  clicks      Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String   @db.Uuid
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([shortCode])
}
